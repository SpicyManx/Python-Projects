# -*- coding: utf-8 -*-
"""Tic Tac Toe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WAqynmXUAOMXfCgfG_p7s0L1ZciC4XrY
"""

#from os import system
from IPython import display
from time import sleep
from itertools import chain

#change this function if you are executing this in either a notebook or as a file
def clear_output():
  #For Python Notebook
  display.clear_output()
  #For Executing the file directly
  #system("clear")

class color:
  reset = "\033[0;0m"
  numbers = "\033[38;5;245m"
  border = "\033[38;5;248m"
  middle = "\033[38;5;248m"
  player1 = "\033[38;5;160m"
  player2 = "\033[38;5;6m"


def print_board(board: list):
  for k in range(3):
    print(f"{color.numbers}{-k+3}{color.reset} {color.border}[{board[k][0]}{color.middle}|{board[k][1]}{color.middle}|{board[k][2]}{color.border}]{color.reset}")
  print(f"   {color.numbers}1 2 3{color.reset}")

def CIV_insert(board:list, pos:list, symbol:str):
  if(len(pos) >= 2):
    if(pos[0].isdigit() and pos[1].isdigit()):
      pos =  [int(pos[0])-1, -int(pos[1])]
      if(len(pos) > 2):
        print("Dona-me només dos xifres!")
        return False, "wait"
      elif(pos[0] > 2 or pos[1] > 2):
        print("Dona-me dos xifres del 1 al 3!!")
        return False, "wait"
      else:
        if (board[pos[1]][pos[0]] == " "):
          board[pos[1]][pos[0]] = symbol
          return True, "go"
        else:
          print("No pots posar en un lloc on ja hi ha!!")
          return False, "wait"
    else:
      print("Dona-me XIFRES!!!")
      return False, "wait"
  else:
    print("Dona-me més d'una xifra!")
    return False, "wait"

def checkwin(board: list, symbol:str, player:str):
  tieboard = list(chain.from_iterable(board))
  #Diagonal Esquerra -> Detra
  if(board[0][0] == symbol and board[1][1] == symbol and board[2][2] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  #Horizontals
  elif(board[0][0] == symbol and board[0][1] == symbol and board[0][2] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  elif(board[1][0] == symbol and board[1][1] == symbol and board[1][2] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  elif(board[2][0] == symbol and board[2][1] == symbol and board[2][2] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  #Diagonal Detra -> Esquerra
  elif(board[0][2] == symbol and board[1][1] == symbol and board[2][0] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  #Verticals
  elif(board[0][0] == symbol and board[1][0] == symbol and board[2][0] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  elif(board[0][1] == symbol and board[1][1] == symbol and board[2][1] == symbol):
    return True, "win"
  elif(board[0][2] == symbol and board[1][2] == symbol and board[2][2] == symbol):
    return True, "win", f"\n\033[38;5;76mEl Jugador {player} ha guanyat!!!\033[0;0m"
  elif not(" " in tieboard):
    return False, "tie", "\n\033[38;5;80mEmpat!\033[0;0m"
  else:
    return False, "continue"

print("-"*30+"\nWELCOME TO TIC TAC TOE\n"+"-"*30)
sleep(1)
clear_output()

print("\nSi esculliu cap, per defecte seran 'X' per jogador 1 i 'O' per el jugador 2")
s = []
s.append(input("Jogador 1: Escull un símbol! (1 character màxim): ").replace(" ",""))
s.append(input("Jogador 2: Escull un símbol! (1 character màxim): ").replace(" ",""))
clear_output()
if s[0] == "":
  s[0] = "X"
if s[1] == "":
  s[1] = "O"
s[0] = color.player1+s[0][0]+color.reset
s[1] = color.player2+s[1][0]+color.reset

board = [[" "," "," "],
         [" "," "," "],
         [" "," "," "]]

sleep(0.2)
player = 1
while True:
  print_board(board)
  k = input(f"Jogador {player} ( x,y ): ")
  j = k.replace(" ","").split(",")
  comp = CIV_insert(board, j, s[player-1])
  if(comp[0]):
    comp = checkwin(board, s[player-1], str(player))
    if(comp[0] or comp[1] == "tie"):
      break
    if(player == 1):
      player = 2
    elif(player == 2):
      player = 1
  if(comp[1] == "wait"):
    sleep(1.5)
  clear_output()
  sleep(0.2)
print(comp[2])